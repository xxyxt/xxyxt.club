<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>下雪不下雨的个人博客</title>
  
  <subtitle>to be a learner</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xxyxt.github.io/"/>
  <updated>2019-01-11T05:34:52.228Z</updated>
  <id>https://xxyxt.github.io/</id>
  
  <author>
    <name>xxyxt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="https://xxyxt.github.io/2019/01/11/undefined-First-Post-1/"/>
    <id>https://xxyxt.github.io/2019/01/11/undefined-First-Post-1/</id>
    <published>2019-01-11T05:34:52.000Z</published>
    <updated>2019-01-11T05:34:52.228Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装pyinstaller报错</title>
    <link href="https://xxyxt.github.io/2019/01/11/%E5%AE%89%E8%A3%85%E6%8A%A5%E9%94%99/"/>
    <id>https://xxyxt.github.io/2019/01/11/安装报错/</id>
    <published>2019-01-11T02:28:47.000Z</published>
    <updated>2019-01-11T02:35:45.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装pyinstaller报错：Python-library-not-in-binary-dependencies"><a href="#安装pyinstaller报错：Python-library-not-in-binary-dependencies" class="headerlink" title="安装pyinstaller报错：Python library not in binary dependencies"></a>安装pyinstaller报错：Python library not in binary dependencies</h2><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><p>Centos7.0<br>Python3.6<br><a id="more"></a></p><h2 id="pyinstaller安装"><a href="#pyinstaller安装" class="headerlink" title="pyinstaller安装"></a>pyinstaller安装</h2><p>照着网上的一些教程安装了pyinstaller</p><pre><code>pip3 installer pyinstaller</code></pre><p>   将pyinstaller的路径添加到环境变量</p><pre><code>export PATH=$PATH:/usr/local/python3/lib/python3.6/site-packages</code></pre><p>修改配置文件，将上一条命令写入  /etc/profile 文件</p><pre><code>vi /etc/profile</code></pre><p>然后装完之后开始使用，试着打包自己刚刚写的一个py文件</p><pre><code>pyinstaller ex14.py</code></pre><p>然后就开始报错</p><pre><code>[root@VM_0_13_centos python_ex]# pyinstaller -F ex41.pyOSError: Python library not found: libpython3.6mu.so.1.0, libpython3.6.so.1.0, libpython3.6m.so.1.0This would mean your Python installation doesn&apos;t come with proper library files.This usually happens by missing development package, or unsuitable build parameters of Python installation.On Debian/Ubuntu, you would need to install Python development packages  * apt-get install python3-dev  * apt-get install python-dev  *  If you&apos;re building Python by yourself, please rebuild your Python with `--enable-shared` (or, `--enable-framework` on Darwin)</code></pre><p>解决办法<br>1打开  /etc/ld.so.conf 写入<br>/usr/local/lib64<br>/usr/local/lib</p><pre><code>vi /etc/ld.so.conf</code></pre><p>2</p><pre><code>ldconfig</code></pre><p>3</p><pre><code>pyinstaller ex14.py</code></pre><p>这样就解决问题了<br><img src="https://img-blog.csdn.net/20180927004219612?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzEyMzkwMA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装pyinstaller报错：Python-library-not-in-binary-dependencies&quot;&gt;&lt;a href=&quot;#安装pyinstaller报错：Python-library-not-in-binary-dependencies&quot; class=&quot;headerlink&quot; title=&quot;安装pyinstaller报错：Python library not in binary dependencies&quot;&gt;&lt;/a&gt;安装pyinstaller报错：Python library not in binary dependencies&lt;/h2&gt;&lt;h2 id=&quot;运行环境&quot;&gt;&lt;a href=&quot;#运行环境&quot; class=&quot;headerlink&quot; title=&quot;运行环境&quot;&gt;&lt;/a&gt;运行环境&lt;/h2&gt;&lt;p&gt;Centos7.0&lt;br&gt;Python3.6&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://xxyxt.github.io/categories/python/"/>
    
    
      <category term="经验" scheme="https://xxyxt.github.io/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>使用Github+Hexo搭建自己的博客</title>
    <link href="https://xxyxt.github.io/2019/01/08/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xxyxt.github.io/2019/01/08/使用Github-Hexo搭建自己的博客/</id>
    <published>2019-01-08T12:09:04.420Z</published>
    <updated>2019-01-11T02:21:45.991Z</updated>
    
    <content type="html"><![CDATA[<p>我的电脑是win10    64位的</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a><strong>前期准备</strong></h2><ul><li>去官网下载Node.js文件，下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>安装完成后，windows运行窗口输入：<code>node -v</code> 会出现版本信息，则安装成功</li></ul><a id="more"></a><ul><li>去官网下载Git安装包，下载地址：<a href="https://www.git-scm.com/download/win" target="_blank" rel="noopener">https://www.git-scm.com/download/win</a><br>按照默认的安装方式，一直点next即可安装成功，默认是安装在C盘，记得修改安装盘符<br>安装完成后，windows运行窗口输入：<code>git --version</code> 会出现版本信息，则安装成功</li></ul><p><strong>注意：安装成功之后，如果输入上述命令，没有出现对应的信息，则将安装路径添加到用户环境变量（我的是F:\Git\cmd)，再次打开运行窗口输入命令即可。</strong></p><h2 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h2><p>Github Pages 其实本身就是 Github 提供的博客服务。 我们在 Github 中创建一个特定格式的 Repository，Github Pages 就会将里面的信息生成一个网页，展示出来。</p><p><strong>操作如下：</strong></p><ol><li><p>注册 Github 账号，然后在 Github 中创建一个以 .github.io 结尾的 Repository。</p><ul><li style="list-style: none"><input type="checkbox"> Repository name: xxyxt.github.io</li><li style="list-style: none"><input type="checkbox"> 勾选 Initialize this repository with a README</li><li style="list-style: none"><input type="checkbox"> Create repository</li></ul></li><li>简单地编辑一下 README.md 这个文档。 比如添加：this is a test blog. 保存(Commit changes)。</li><li>打开网页：xxyxt.github.io 这里就可以看到 README.md 里的内容了。</li></ol><p>这个生成好的 Repository 就是用来存放博客内容的地方，也只有这个仓库里的内容，才会被 xxyxt.github.io 这个网页显示出来。</p><h2 id="hexo-博客框架"><a href="#hexo-博客框架" class="headerlink" title="hexo 博客框架"></a>hexo 博客框架</h2><ul><li><strong>安装hexo</strong></li></ul><p>在准备工作中，我们已经安装了<strong>Node.js</strong>和<strong>Git</strong>，接下来直接安装 hexo 即可</p><ul><li style="list-style: none"><input type="checkbox"> 在windows运行命令窗口中输入 <code>nmp install -g hexo-cli</code></li></ul><ul><li style="list-style: none"><input type="checkbox"> 安装完成后，输入 <code>hexo -v</code></li></ul><p>得到版本信息，即安装成功</p><ul><li><p><strong>设置全局配置 user.name 和 user.email</strong><br>鼠标右击，单击Git bash here，打开命令窗口，输入</p><p>  <code>git config –-global user.name “张三”</code>  //(“”的账号是刚才Github里面自己注册的账号)<br>  <code>git config –-global user.email “1234567@qq.com”</code> //(“”的邮箱是你自己注册的邮箱)</p></li><li><p><strong>生成SSH密钥设置到Github</strong><br><code>cd ~/.ssh</code><br><code>ssh-keygen -t rsa -C “username”</code>  //这里的username为计算机名<br>如果  <code>cd ~/.ssh</code> 显示No such file，可以输入命令 <code>mkdir ~/.ssh</code> 创建一个文件夹，然后执行相应的操作即可，出现下图，则设置成功<img src="https://img-blog.csdnimg.cn/20190108185113300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzEyMzkwMA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置ssh key到GitHub 默认生成ssh key在C:\Users\username.ssh文件夹中，用记事本打开 id_rsa.pub文件，复制 i文件内容到 github-&gt;settings-&gt;SSH and GPG key-&gt;new ssh-&gt;key </p></li><li><p><strong>ssh设置是否成功测试</strong></p><p>  输入命令 <code>ssh -T git@github.com</code> </p></li><li><p><strong>创建本地博客</strong></p></li></ul><ul><li style="list-style: none"><input type="checkbox"> 在D盘下创建文件夹 test</li></ul><ul><li style="list-style: none"><input type="checkbox"> 鼠标右键 test，选择 Git Bash Here</li></ul><ul><li style="list-style: none"><input type="checkbox"> Git Bash 打开之后，所在的位置就是 test 这个文件夹的位置。（/F/test）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 输入 <code>hexo init</code> 将 test文件夹初始化成一个博客文件夹。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 输入 <code>npm install</code> 安装依赖包。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 输入 <code>hexo g</code> 生成（generate）网页。 由于我们还没创建任何博客，生成的网页会展示 Hexo 里面自带了一个 Hello World 的博客。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 输入 <code>hexo s</code> 将生成的网页放在了本地服务器（server）。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 浏览器里输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 。 就可以看到刚才的成果了。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 回到 Git Bash，按 Ctrl+C 结束。<br>此时再看 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 就是无法访问了。</li></ul><p>问题：假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号</p><ul><li><strong>发布一篇博客</strong></li></ul><p>如果你按照前面的教程走下来，没有退出刚刚的Git Bash界面，当前路径是刚刚初始化的test路径，输入 <code>hexo new &quot;My First Post&quot;</code></p><ul><li style="list-style: none"><input type="checkbox"> 在<code>F:\test\source_posts</code>路径下，会有一个 My-First-Post.md 的文件。 编辑这个文件，然后保存。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 回到 Git Bash，输入 <code>hexo g</code> 生成博客</li></ul><ul><li style="list-style: none"><input type="checkbox"> 输入 <code>hexo s</code> 开启服务</li></ul><ul><li style="list-style: none"><input type="checkbox"> 前往 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看成果。</li></ul><ul><li style="list-style: none"><input type="checkbox"> 回到 Git Bash，按 Ctrl+C 结束。如果不结束的话，接口会一直被占用。</li></ul><ul><li><strong>将本地Hexo博客部署在Github上</strong></li></ul><p>前面两个部分，我们已经有了本地博客，和一个能托管这些资料的线上仓库。只要把本地博客部署（deploy）在我们的 Github 对应的 Repository 就可以了。</p><h6 id="操作如下："><a href="#操作如下：" class="headerlink" title="操作如下："></a>操作如下：</h6><ol><li><p>获取 Github 对应的 Repository 的链接。</p><ul><li style="list-style: none"><input type="checkbox"> 登陆 Github，进入到 xxyxt.github.io    </li><li style="list-style: none"><input type="checkbox"> 点击 Clone or download    </li><li style="list-style: none"><input type="checkbox"> 复制 URL 待用，我的是 <a href="https://github.com/xxyxt/xxyxt.github.io.git" target="_blank" rel="noopener">https://github.com/xxyxt/xxyxt.github.io.git</a></li></ul></li></ol><ol start="2"><li><p>修改博客的配置文件</p><ul><li style="list-style: none"><input type="checkbox"> 打开配置文件 /F/test/_config.yml （使用 bash 里的 vi 或者 notepad）</li><li style="list-style: none"><input type="checkbox"> 找到 #Deployment，填入以下内容：<br>deploy:<br>type: git<br>repository: <a href="https://github.com/xxyxt/xxyxt.github.io.git" target="_blank" rel="noopener">https://github.com/xxyxt/xxyxt.github.io.git</a><br>branch: master</li></ul></li></ol><ol start="3"><li>部署</li></ol><ul><li style="list-style: none"><input type="checkbox"> 回到 Git Bash 输入 <code>npm install hexo-deployer-git --save</code> 安装 hexo-deployer-git 此步骤只需要做一次。</li><li style="list-style: none"><input type="checkbox"> 输入 <code>hexo d</code></li><li style="list-style: none"><input type="checkbox"> 得到 INF Deploy done: git 即为部署成功</li></ul><p>之前我们创建的 ReadMe.md 会被自动覆盖掉。</p><ol start="4"><li>查看成果</li></ol><p>前往 xxyxt.github.io 即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我的电脑是win10    64位的&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;&lt;strong&gt;前期准备&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;去官网下载Node.js文件，下载地址：&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;br&gt;安装完成后，windows运行窗口输入：&lt;code&gt;node -v&lt;/code&gt; 会出现版本信息，则安装成功&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="博客" scheme="https://xxyxt.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="经验" scheme="https://xxyxt.github.io/tags/%E7%BB%8F%E9%AA%8C/"/>
    
      <category term="博客" scheme="https://xxyxt.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
